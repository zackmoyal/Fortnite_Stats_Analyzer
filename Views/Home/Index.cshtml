@{
    ViewData["Title"] = "Fortnite Stats Analyzer";
}

<header>
    <div class="logo-container">
        <img class="logo" src="/images/fortnite-logo.png" alt="Fortnite Logo" />
    </div>
</header>

<div class="home-page-enter-username-section">
    <h1>Fortnite Stats Analyzer</h1>
    <p>Enter a Fortnite username to get their stats and get generated feedback!</p>

    <form id="usernameForm" method="post" asp-controller="Home" asp-action="GetStats">
        <div class="home-page-form-group">
            <label for="username">Enter Fortnite Username:</label>
            <input type="text" id="username" name="username" class="form-control" placeholder="Username" required />
        </div>
        <button type="submit" class="btn">Get Stats</button>
    </form>
</div>

@if (ViewBag.Error != null)
{
    @await Html.PartialAsync("_ErrorModal", (string)ViewBag.Error)
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('#usernameForm');
            const usernameInput = document.getElementById('username');
            const allowedUsernames = ["ZbiZniZ", "Tfue", "Bugha", "Ninja"]; // stubbed for demo
            const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));

            function showError(message) {
                const errorMessage = document.querySelector('.error-message');
                if (errorMessage) {
                    errorMessage.textContent = message;
                    errorModal.show();
                }
            }

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                const input = usernameInput.value.trim();
                if (input === '') {
                    showError("Please enter a username.");
                    return;
                }

                // Check for case-sensitive match first
                const exactMatch = allowedUsernames.find(name => name === input);
                const closeMatch = allowedUsernames.find(name => name.toLowerCase() === input.toLowerCase());

                if (!exactMatch && closeMatch) {
                    showError(`Username '${input}' is incorrect. Did you mean '${closeMatch}'? Please enter it with exact casing.`);
                    return;
                }

                try {
                    const response = await fetch(`/Home/ValidateUsername?username=${encodeURIComponent(input)}`);
                    const result = await response.json();

                    if (result.success) {
                        // Only submit if validation is successful
                        form.removeEventListener('submit', arguments.callee);
                        form.submit();
                    } else {
                        // Show error in our custom modal
                        showError(result.message || "Invalid username. Please enter a valid Fortnite username.");
                    }
                } catch (error) {
                    console.error('Error validating username:', error);
                    showError("An error occurred while validating the username. Please try again.");
                }
            });

            // If there's an error message on page load, show it in our custom modal
            if (document.querySelector('.error-message')?.textContent) {
                errorModal.show();
            }
        });
    </script>
}
